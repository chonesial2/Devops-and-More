{{- if .Values.statefulset.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: '{{ include "app.name" . }}-{{ include "app.env" . }}'
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  serviceName: '{{ include "app.name" . }}-{{ include "app.env" . }}-svc'
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.statefulset.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: '{{ include "app.name" . }}-{{ include "app.env" . }}-sa'
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: '{{ include "app.name" . }}-{{ include "app.env" . }}'
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- toYaml .Values.statefulset.command | nindent 12 }}
          args:
            {{- toYaml .Values.statefulset.args | nindent 12 }}
          envFrom:
            - secretRef:
                name: '{{ include "app.name" . }}-{{ include "app.env" . }}-secret'
            - configMapRef:
                name: '{{ include "app.name" . }}-{{ include "app.env" . }}-configmap'
          ports:
            - name: http
              containerPort: {{ int .Values.containerPort }}
              protocol: TCP
          {{- with .Values.probes }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: '{{ include "app.name" . }}-{{ include "app.env" . }}-data'
              mountPath: {{ .Values.statefulset.persistentVolumeClaim.path | quote }}
      volumes:
        - name: '{{ include "app.name" . }}-{{ include "app.env" . }}-data'
          persistentVolumeClaim:
            claimName: '{{ include "app.name" . }}-{{ include "app.env" . }}-pvc'
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
