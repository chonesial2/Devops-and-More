---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ln5-validator-data-pv
  labels:
    type: ln5-validator-data-pv
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-dev-slave-sa-ln5
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
     namespace: dev
     name: ln5-validator-data-pvc
  hostPath:
     path: "/k8s-data/hostpath/ln5-validator-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ln5-validator-data-pvc
  namespace: dev
spec:
  storageClassName: local-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: ln5-validator-data-pv
  volumeMode: Filesystem  

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ln5-validator-certs-pv
  namespace: dev
  labels:
    type: ln5-validator-certs-pv
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-dev-slave-sa-ln5
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
     namespace: dev 
     name: ln5-validator-certs-pvc
  hostPath:
     path: "/k8s-data/hostpath/ln5-validator-certs"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ln5-validator-certs-pvc
  namespace: dev
spec:
  storageClassName: local-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: ln5-validator-certs-pv

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: teku-validator-ln5
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teku-validator-ln5
  template:
    metadata:
      labels:
        app: teku-validator-ln5
    spec:
      securityContext:
        #runAsNonRoot: true
        runAsUser: 0
        runAsGroup: 1000
          #fsGroup: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - k8s-dev-slave-sa-ln5
      containers:
      - name: teku-validator-ln5
        image: consensys/teku:23.8.0
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          value: "-Xmx3g"
      # Add other environment variables here, e.g., validators-external-signer-url, validators-proposer-default-fee-recipient, etc.
        - name: REST_API_HOST_ALLOWLIST
          value: "*"
        - name: METRICS_ENABLED
          value: "true"
        - name: SIGNER_URL
          value: "https://156.38.136.34:30900"   #"https://dev-signer.globalnodenet.com/"
        ports:
        - containerPort: 8081
        command:
        - "/bin/sh"
        - "-c"
        args:
          - |
            exec
            /opt/teku/bin/teku --rest-api-host-allowlist="*" --metrics-enabled="true" \
            vc --data-validator-path=/teku-validator --log-file=/teku-validator/teku.log \
            --beacon-node-api-endpoint=http://teku-svc-ln5.dev.svc.cluster.local:4000 \
            --validators-external-signer-url=${SIGNER_URL} \
            --validators-external-signer-public-keys=external-signer \
            --validators-proposer-default-fee-recipient=0x388C818CA8B9251b393131C08a736A67ccB19297 \
            --metrics-enabled=true --metrics-interface=0.0.0.0 --metrics-host-allowlist=* --metrics-port=8081 \
            --validators-external-signer-truststore=/certs/web3signer_truststore.p12 \
            --validators-external-signer-truststore-password-file=/certs/truststore_pass.txt \
            --validators-external-signer-keystore=/certs/teku_client_keystore.p12 \
            --validators-external-signer-keystore-password-file=/certs/teku_keystore_password.txt \
            --validators-external-signer-slashing-protection-enabled=true
        volumeMounts:
        - name: validator-data-ln5
          mountPath: /teku-validator
        - name: teku-certs-ln5
          mountPath: /certs
      - name: validator-async-ln5
        image: ravinayag/rsync:latest
        imagePullPolicy: Always
        env:
        - name: ENV
          value: dev
        - name: SRC
          value: ln5  
        - name: DEST1
          value: ln4
        - name: DEST2
          value: ln6
        command:
        - "/bin/sh"
        - "-c"
        args:
          - |
            #apt update && apt install ssh rsync
            sleep 10
            echo '20.200.0.3 k8s-dev-master-sa-ln4' >> /etc/hosts
            echo '20.200.0.5 k8s-dev-slave-sa-ln6' >> /etc/hosts
            while true; do
              echo -e "\n \n"
              echo "Hello, executing every 10 minutes."
              echo -e "Starting the rsync between $SRC and $DEST1"
              ssh -i /certs1/dev.pem -o StrictHostKeyChecking=no ubuntu@k8s-$ENV-master-sa-$DEST1 'sudo chmod 777 /k8s-data/hostpath/'$DEST1'-validator-*'
              rsync -avPS -e "ssh -i /certs1/dev.pem -o StrictHostKeyChecking=no" /certs/* ubuntu@k8s-$ENV-master-sa-$DEST1:/k8s-data/hostpath/$DEST1-validator-certs/
              rsync -avPS -e "ssh -i /certs1/dev.pem -o StrictHostKeyChecking=no" /teku-validator/* ubuntu@k8s-$ENV-master-sa-$DEST1:/k8s-data/hostpath/$DEST1-validator-data/
              echo -e ""
              echo -e "Starting the rsync between $SRC and $DEST2"
              ssh -i /certs1/dev.pem -o StrictHostKeyChecking=no ubuntu@k8s-$ENV-slave-sa-$DEST2 'sudo chmod 777 /k8s-data/hostpath/'$DEST2'-validator-*'
              rsync -avPS -e "ssh -i /certs1/dev.pem -o StrictHostKeyChecking=no" /certs/* ubuntu@k8s-$ENV-slave-sa-$DEST2:/k8s-data/hostpath/$DEST2-validator-certs/
              rsync -avPS -e "ssh -i /certs1/dev.pem -o StrictHostKeyChecking=no" /teku-validator/* ubuntu@k8s-$ENV-slave-sa-$DEST2:/k8s-data/hostpath/$DEST2-validator-data/
              sleep 600 # Sleep for 10 minutes (600 seconds)
            done
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        volumeMounts:
        - name: validator-data-ln5
          mountPath: /teku-validator
          readOnly: true
        - name: teku-certs-ln5
          mountPath: /certs
          readOnly: true
        - name: ssh-secret
          mountPath: /certs1/dev.pem
          subPath: dev.pem            
      volumes:
        - name: validator-data-ln5
          persistentVolumeClaim:
            claimName: ln5-validator-data-pvc
        - name: teku-certs-ln5
          persistentVolumeClaim:
            claimName: ln5-validator-certs-pvc            
        - name: ssh-secret
          secret:
            secretName: ssh-access
            defaultMode: 0400
---
apiVersion: v1
kind: Service
metadata:
  name: teku-validator-ln5-svc
  namespace: dev
spec:
  selector:
    app: teku-validator-ln5
  ports:
  - name: metrics
    protocol: TCP
    port: 8081
    targetPort: 8081


