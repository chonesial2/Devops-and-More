---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dev01-validator-data-pv
  namespace: dev
  labels:
    type: dev01-validator-data-pv
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - solo-staking-dev01
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
     namespace: dev
     name: dev01-validator-data-pvc
  hostPath:
     path: "/k8s-data/dev01-validator-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dev01-validator-data-pvc
  namespace: dev
spec:
  storageClassName: microk8s-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: dev01-validator-data-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dev01-validator-certs-pv
  namespace: dev
  labels:
    type: dev01-validator-certs-pv
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - solo-staking-dev01
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
     namespace: dev 
     name: dev01-validator-certs-pvc
  hostPath:
     path: "/k8s-data/dev01-validator-certs"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dev01-validator-certs-pvc
  namespace: dev
spec:
  storageClassName: microk8s-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: dev01-validator-certs-pv

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: teku-validator-dev01
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teku-validator-dev01
  template:
    metadata:
      labels:
        app: teku-validator-dev01
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 1000
          #fsGroup: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - solo-staking-dev01
      containers:
      - name: teku-validator-dev01
        image: consensys/teku:23.9.0
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          value: "-Xmx16g"
      # Add other environment variables here, e.g., validators-external-signer-url, validators-proposer-default-fee-recipient, etc.
        - name: REST_API_HOST_ALLOWLIST
          value: "*"
        - name: METRICS_ENABLED
          value: "true"
        - name: SIGNER_URL
          value: "https://41.203.13.10:30901"   #"http://localhost:9090"   #https://dev-signer.globalnodenet.com/"
        ports:
        - containerPort: 8081
        command:
        - "/bin/sh"
        - "-c"
        args:
          - |
            exec
            /opt/teku/bin/teku --rest-api-host-allowlist="*" --metrics-enabled="true" \
            vc --data-validator-path=/teku-validator --log-file=/teku-validator/teku.log \
            --beacon-node-api-endpoint=http://teku-svc-dev01.dev.svc.cluster.local:4000 \
            --validators-external-signer-url=${SIGNER_URL} \
            --validators-external-signer-public-keys=external-signer \
            --validators-proposer-default-fee-recipient=0x388C818CA8B9251b393131C08a736A67ccB19297 \
            --metrics-enabled=true --metrics-interface=0.0.0.0 --metrics-host-allowlist=* --metrics-port=8081 --validators-builder-registration-default-enabled \
            --validators-external-signer-truststore=/certs/web3signer_truststore.p12 \
            --validators-external-signer-truststore-password-file=/certs/truststore_pass.txt \
            --validators-external-signer-keystore=/certs/teku_client_keystore.p12 \
            --validators-external-signer-keystore-password-file=/certs/teku_keystore_password.txt \
            --validators-external-signer-slashing-protection-enabled=true
        volumeMounts:
        - name: validator-data-dev01
          mountPath: /teku-validator
        - name: teku-certs-dev01
          mountPath: /certs              
---
apiVersion: v1
kind: Service
metadata:
  name: teku-validator-svc-dev01
  namespace: dev
spec:
  selector:
    app: teku-validator-dev01
  ports:
  - name: metrics
    protocol: TCP
    port: 8081
    targetPort: 8081



